donnees <- read.csv("don.csv")
prop.test (c(7,76), c(45,389))
install.packages(c("car", "digest", "dplyr", "evaluate", "knitr", "nlme", "openssl", "openxlsx", "pillar", "progress", "quantreg", "readtext", "rmarkdown", "tibble", "tinytex", "xfun", "zip"))
install.packages(c("clipr", "coda", "curl", "deSolve", "digest", "dplyr", "ellipsis", "haven", "hms", "markdown", "mime", "mvtnorm", "nlme", "numDeriv", "openssl", "pbapply", "pillar", "quantreg", "Rcpp", "readtext", "rlang", "rmarkdown", "tibble", "tinytex", "vctrs", "xfun", "xml2", "zip"))
install.packages(c("ggplot2", "httr", "knitr", "markdown", "nlme", "quantreg", "Rcpp", "readtext", "rlang", "rmarkdown", "tibble", "tinytex", "vctrs", "xfun", "xml2", "zip"))
install.packages(c("nlme", "xml2"))
install.packages("tidyverse")
setwd("C:/Users/hediera/Google Drive/MASTER SDL/raisonnement statistique/1")
setwd("C:/Users/hediera/Google Drive/MASTER SDL/raisonnement statistique/1")
load("spr_english")
load("spr_english.rda")
View(spr_english)
load("spr_english.rda")
spr <- spr_english
spr$logRT <- log(spr$RT)
hist(spr$RT)
hist(spr$logRT)
hist(spr$logRT)
# Creer des data frames separes pour
# chaque condition
spr_gram <- dplyr::filter(spr, Condition == "Grammatical")
spr_ungram <- dplyr::filter(spr, Condition == "Ungrammatical")
# Visualiser donnees des deux conditions separement
hist(spr_gram$logRT)
abline(v=median(spr_gram$logRT), col="red")
hist(spr_ungram$logRT)
abline(v=median(spr_ungram$logRT), col="red")
hist(spr$logRT)
# Creer des data frames separes pour
# chaque condition
spr_gram <- dplyr::filter(spr, Condition == "Grammatical")
spr_ungram <- dplyr::filter(spr, Condition == "Ungrammatical")
View(spr_english)
factorial(0.5)
0.5*0.5
0.5^40
View(spr)
