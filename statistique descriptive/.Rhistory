?geompoint
library(tidyverse)
library(ggplot2)
?geom_point
9/4!(9-4)!
fact = function (num)
fact = function (num)
+ (
+ if (num==O) return (1)
+ else return (nwn*fact(num-1))
+ )
+ (
+ if (num==O) return (1)
+ else return (nwn*fact(num-1))
+ )
fact = function (num) +
+ (
+ if (num==O) return (1)
+ else return (nwn*fact(num-1))
+ )
fact(9)/prod(fact(6)fact(3))
fact(9)/prod(fact(6)*fact(3))
fact(9)/prod(factorial(6)*factorial(3))
factorial(9)/prod(factorial(6)*factorial(3))
source('D:/Gdrive/Github/Statistique-M2/raisonnement statistique/2/assignment.R', echo=TRUE)
factorial(9)/prod(factorial(5)*factorial(4))
factorial(9)/prod(factorial(6)*factorial(3))
factorial(9)/prod(factorial(5)*factorial(4))
fact = function (num) I + prod(1:num) + 1
fact = function (num) + I + if (num==O) return (1) + else return (nwn*fact (num-1) ) + 3
fact = function (num) I + prod(1:num) + 1
fact = function (num) + I + if (num==9) return (1) + else return (nwn*fact (num-1) ) + 3
fact = function (num) I + prod(9:num) + 1
fact = function (num) + ( + if (num==O) return (1) + else return (nwn*fact (num-1) ) + )
fact = function (num) ( + prod(1:num) + )
fact = function (num) (
+ prod(1:num)
+ )
binom=rbinom(10 0,10,0 .6)
binom=rbinom(100,10,0.6)
hist(binom)
binom=rbinom(100,10,0.6)
hist(binom)
binom=rbinom(100,10,0.6)
hist(binom)
binom=rbinom(100,10,0.9)
hist(binom)
binom=rbinom(100,10,0.9)
hist(binom)
binom=rbinom(100,10,0.6)
hist(binom)
binom=rbinom(100,10,0.6)
hist(binom)
binom=rbinom(1000,10,0.6)
hist(binom)
binom=rbinom(1000,10,0.6)
hist(binom)
binom=rbinom(1000,10,0.6)
hist(binom)
binom=rbinom(100,10,0.6)
hist(binom)
binom=rbinom(100,10,0.6)
hist(binom)
library(nycflights13)
install.packages("tidyverse")
library(nycflights13)
library(tidyverse)
nycflights13 <- nycflights13::flights
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
library(tidyverse)
nycflights13 <- nycflights13::flights
jan1 <- filter(flights, month == 1, day == 1)
q1.1 <- filter(flights, arr_delay > 120)
q1.2 <- filter(flights, dest == "IAH" | dest == "HOU")
q1.2 <- filter(flights, dest %in% c("IAH", "HOU"))
?flights
view(airlines)
q1.3 <- filter(flights, carrier %in% c("UA", "DL", "AA"))
q1.4 <- filter(flights, month %in% c(7, 8, 9))
q1.5 <- filter(flights, arr_delay > 120 & dep_delay < 1)
q1.6 <- filter(flights, arr_delay > 60 & dep_delay < 30)
q1.7 <- filter(flights, hour %in% c(0, 1, 2, 3, 4, 5, 6))
q2.4 <- between(flights, flights$month == 7, flights$month == 9)
q2.4 <- between(flights, flights$month == 7, flights$month == 9)
q2.4 <- filter(flights, between(flights$month, 7, 9))
q2.7 <- filter(flights, between(flights$hour, 0, 6))
q2.4 <- between(flights, flights$month == 7, flights$month == 9)
q2.4 <- filter(flights, between(flights$month, 7, 9))
summary(nycflights13)
View(nycflights13)
q3 <- filter(flights, dep_time %in% c("NA"))
View(nycflights13)
q3 <- filter(flights, dep_time %in% "NA")
View(q3)
q3 <- filter(flights, dep_time %in% NA)
#5.3.1
q1 <- arrange(flights, is.na(flights$dep_delay))
View(q1)
q2 <- arrange(flights, desc(dep_delay))
View(q2)
q2 <- arrange(flights, dep_delay)
#5.5.2
q1 <- transmute(flights,
dep_time,
dep_hour = dep_time %/% 100,
dep_minute = dep_time %% 100
)
library(nycflights13)
library(tidyverse)
#5.5.2
q1 <- transmute(flights,
dep_time,
dep_hour = dep_time %/% 100,
dep_minute = dep_time %% 100
)
View(q1)
#5.5.2
nycflights13 <- transmute(flights,
dep_time,
dep_hour = dep_time %/% 100,
dep_minute = dep_time %% 100
)
library(nycflights13)
library(tidyverse)
nycflights13 <- nycflights13::flights
#5.5.2
transmute(nycflights13,
dep_time,
dep_hour = dep_time %/% 100,
dep_minute = dep_time %% 100
)
transmute(nycflights13,
sched_dep_time,
sched_dep_hour = dep_time %/% 100,
sched_dep_minute = dep_time %% 100
)
install.packages("tidyverse")
library(tidyverse)
library(ggplot2)
#create data
mpg <- ggplot2::mpg
#3.2.4
#2 234 observations (rows) and 11 variables (column)
?mpg
#3 drv is the type of traction wheels the vehicle uses
#4
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
#5
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = drv))
#3.3.1 Exercises
#1
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
#color = "blue" does not refer to a variable in mpg, it creates a variable (which is the same) for every row
#2 manufacturer, model, trans, drv, fl and class are categorical; displ, year, cty and hwy are continuous
#3
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = model, size = trans, shape = manufacturer))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = displ, size = cty, alpha = hwy))
#Some aesthetics are more understandable for continuous data (alpha, size (gradient)), some for categorical data (shape, color).
#4
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = manufacturer, color = manufacturer))
#values are merged, they're overlapping
#5 stroke is used to modify the width of the border
#6
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = displ < 5)) +
geom_point(shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)
#values are merged, they're overlapping
#5 stroke is used to modify the width of the border
#6
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = displ < 5)) +
geom_point(shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)
#4.4
#1 it's the other way around
10 <- my_variable
my_varıable
#4.4
#1 it's the other way around
10 <- my_variable
#4.4
#1 it's the other way around
10 <- my_variable
#4.4
#1 it's the other way around
value <- 10
#4.4
#1 it's the other way around
my_variable <- 10
my_variable <- 10
#4.4
#1 it's the other way around
my_variable <- 10
#4.4
#1 it's the other way around
my_variable <- 10
my_varıable
#2
library(tidyverse)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
#wrong spelling
filter(mpg, cyl = 8)
#missing bracket
filter(diamond, carat > 3)
#missing bracket
filter(diamond, carat > 3)
